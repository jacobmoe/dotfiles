{"name":"ex-mode","main":"./lib/ex-mode","version":"0.5.1","description":"Ex for Atom's vim-mode","activationCommands":{"atom-workspace":"ex-mode:open"},"repository":{"type":"git","url":"https://github.com/lloeki/ex-mode"},"license":"MIT","engines":{"atom":">=0.200.0 <2.0.0"},"dependencies":{"underscore-plus":"1.x","event-kit":"^0.7.2","space-pen":"^5.1.1","atom-space-pen-views":"^2.0.4"},"consumedServices":{"vim-mode":{"versions":{"^0.1.0":"consumeVim"}}},"providedServices":{"ex-mode":{"description":"Ex commands","versions":{"0.20.0":"provideEx"}}},"readme":"# ex-mode package\n\nex-mode for Atom's vim-mode\n\n## Use\n\nInstall both [vim-mode](https://github.com/atom/vim-mode) and ex-mode. Type `:` in command mode. Enter `w` or `write`.\n\n## Extend\n\nUse the service to register commands, from your own package, or straight from `init.coffee`:\n\n```coffee\n# in Atom's init.coffee\natom.packages.onDidActivatePackage (pack) ->\n  if pack.name == 'ex-mode'\n    Ex = pack.mainModule.provideEx()\n    Ex.registerCommand 'z', -> console.log(\"Zzzzzz...\")\n```\n\nSee `lib/ex.coffee` for some examples commands. Contributions are very welcome!\n\n## Status\n\nGroundwork is done. More ex commands are easy to add and will be coming as time permits and contributions come in.\n\n## License\n\nMIT\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/lloeki/ex-mode/issues"},"homepage":"https://github.com/lloeki/ex-mode","_id":"ex-mode@0.5.1","_shasum":"8af9a669232d55ae62ee5b6d21750e864564a7fe","_resolved":"file:../d-115620-89851-1agkylx/package.tgz","_from":"../d-115620-89851-1agkylx/package.tgz"}